import numpy as np

from common import Vector
from common import l, m, I, g

def f(z: Vector, u: Vector)->Vector:
    '''
        f - функция в ОДУ
        dz/dt = f(z, u)
    '''
    return Vector([
        z[3]
        , 
        z[4]
        ,
        z[5]
        ,
        (-l[0]*l[1]*(m[1]/2 - m[2])*((-l[0]**2*l[1]*l[2]*m[2]*(m[1]/2 - m[2])*np.cos(z[0] - z[1])*np.cos(z[0] - z[2])/(2*I[0] + 2*l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]*l[2]*m[2]*np.cos(z[1] - z[2])/2)**2/((I[1] - l[0]**2*l[1]**2*(m[1]/2 - m[2])**2*np.cos(z[0] - z[1])**2/(I[0] + l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]**2*m[1]/4 + l[1]**2*m[2])*(I[2] - l[0]**2*l[2]**2*m[2]**2*np.cos(z[0] - z[2])**2/(4*I[0] + 4*l[0]**2*(m[0]/4 + m[1] + m[2])) + l[2]**2*m[2]/4 - (-l[0]**2*l[1]*l[2]*m[2]*(m[1]/2 - m[2])*np.cos(z[0] - z[1])*np.cos(z[0] - z[2])/(2*I[0] + 2*l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]*l[2]*m[2]*np.cos(z[1] - z[2])/2)**2/(I[1] - l[0]**2*l[1]**2*(m[1]/2 - m[2])**2*np.cos(z[0] - z[1])**2/(I[0] + l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]**2*m[1]/4 + l[1]**2*m[2]))) + 1)*np.cos(z[0] - z[1])/(I[1] - l[0]**2*l[1]**2*(m[1]/2 - m[2])**2*np.cos(z[0] - z[1])**2/(I[0] + l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]**2*m[1]/4 + l[1]**2*m[2]) + l[0]*l[2]*m[2]*(-l[0]**2*l[1]*l[2]*m[2]*(m[1]/2 - m[2])*np.cos(z[0] - z[1])*np.cos(z[0] - z[2])/(2*I[0] + 2*l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]*l[2]*m[2]*np.cos(z[1] - z[2])/2)*np.cos(z[0] - z[2])/((2*I[1] - 2*l[0]**2*l[1]**2*(m[1]/2 - m[2])**2*np.cos(z[0] - z[1])**2/(I[0] + l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]**2*m[1]/2 + 2*l[1]**2*m[2])*(I[2] - l[0]**2*l[2]**2*m[2]**2*np.cos(z[0] - z[2])**2/(4*I[0] + 4*l[0]**2*(m[0]/4 + m[1] + m[2])) + l[2]**2*m[2]/4 - (-l[0]**2*l[1]*l[2]*m[2]*(m[1]/2 - m[2])*np.cos(z[0] - z[1])*np.cos(z[0] - z[2])/(2*I[0] + 2*l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]*l[2]*m[2]*np.cos(z[1] - z[2])/2)**2/(I[1] - l[0]**2*l[1]**2*(m[1]/2 - m[2])**2*np.cos(z[0] - z[1])**2/(I[0] + l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]**2*m[1]/4 + l[1]**2*m[2]))))*(-g*l[1]*m[1]*np.cos(z[1])/2 - g*l[1]*m[2]*np.cos(z[1]) + l[0]*l[1]*m[1]*z[3]**2*np.sin(z[0] - z[1])/2 + l[0]*l[1]*m[2]*z[3]**2*np.sin(z[0] - z[1]) - l[1]*l[2]*m[2]*z[5]**2*np.sin(z[1] - z[2])/2 + u[1])/(I[0] + l[0]**2*(m[0]/4 + m[1] + m[2])) + (l[0]*l[1]*(m[1]/2 - m[2])*(-l[0]**2*l[1]*l[2]*m[2]*(m[1]/2 - m[2])*np.cos(z[0] - z[1])*np.cos(z[0] - z[2])/(2*I[0] + 2*l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]*l[2]*m[2]*np.cos(z[1] - z[2])/2)*np.cos(z[0] - z[1])/((I[1] - l[0]**2*l[1]**2*(m[1]/2 - m[2])**2*np.cos(z[0] - z[1])**2/(I[0] + l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]**2*m[1]/4 + l[1]**2*m[2])*(I[2] - l[0]**2*l[2]**2*m[2]**2*np.cos(z[0] - z[2])**2/(4*I[0] + 4*l[0]**2*(m[0]/4 + m[1] + m[2])) + l[2]**2*m[2]/4 - (-l[0]**2*l[1]*l[2]*m[2]*(m[1]/2 - m[2])*np.cos(z[0] - z[1])*np.cos(z[0] - z[2])/(2*I[0] + 2*l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]*l[2]*m[2]*np.cos(z[1] - z[2])/2)**2/(I[1] - l[0]**2*l[1]**2*(m[1]/2 - m[2])**2*np.cos(z[0] - z[1])**2/(I[0] + l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]**2*m[1]/4 + l[1]**2*m[2]))) - l[0]*l[2]*m[2]*np.cos(z[0] - z[2])/(2*I[2] - 2*l[0]**2*l[2]**2*m[2]**2*np.cos(z[0] - z[2])**2/(4*I[0] + 4*l[0]**2*(m[0]/4 + m[1] + m[2])) + l[2]**2*m[2]/2 - 2*(-l[0]**2*l[1]*l[2]*m[2]*(m[1]/2 - m[2])*np.cos(z[0] - z[1])*np.cos(z[0] - z[2])/(2*I[0] + 2*l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]*l[2]*m[2]*np.cos(z[1] - z[2])/2)**2/(I[1] - l[0]**2*l[1]**2*(m[1]/2 - m[2])**2*np.cos(z[0] - z[1])**2/(I[0] + l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]**2*m[1]/4 + l[1]**2*m[2])))*(-g*l[2]*m[2]*np.cos(z[2])/2 + l[0]*l[2]*m[2]*z[3]**2*np.sin(z[0] - z[2])/2 + l[1]*l[2]*m[2]*z[4]**2*np.sin(z[1] - z[2])/2 + u[2])/(I[0] + l[0]**2*(m[0]/4 + m[1] + m[2])) + (-l[0]*l[1]*(m[1]/2 - m[2])*(-l[0]*l[1]*(m[1]/2 - m[2])*np.cos(z[0] - z[1])/(I[0] + l[0]**2*(m[0]/4 + m[1] + m[2])) - (l[0]*l[1]*(m[1]/2 - m[2])*(-l[0]**2*l[1]*l[2]*m[2]*(m[1]/2 - m[2])*np.cos(z[0] - z[1])*np.cos(z[0] - z[2])/(2*I[0] + 2*l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]*l[2]*m[2]*np.cos(z[1] - z[2])/2)*np.cos(z[0] - z[1])/((I[0] + l[0]**2*(m[0]/4 + m[1] + m[2]))*(I[1] - l[0]**2*l[1]**2*(m[1]/2 - m[2])**2*np.cos(z[0] - z[1])**2/(I[0] + l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]**2*m[1]/4 + l[1]**2*m[2])) - l[0]*l[2]*m[2]*np.cos(z[0] - z[2])/(2*I[0] + 2*l[0]**2*(m[0]/4 + m[1] + m[2])))*(-l[0]**2*l[1]*l[2]*m[2]*(m[1]/2 - m[2])*np.cos(z[0] - z[1])*np.cos(z[0] - z[2])/(2*I[0] + 2*l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]*l[2]*m[2]*np.cos(z[1] - z[2])/2)/(I[2] - l[0]**2*l[2]**2*m[2]**2*np.cos(z[0] - z[2])**2/(4*I[0] + 4*l[0]**2*(m[0]/4 + m[1] + m[2])) + l[2]**2*m[2]/4 - (-l[0]**2*l[1]*l[2]*m[2]*(m[1]/2 - m[2])*np.cos(z[0] - z[1])*np.cos(z[0] - z[2])/(2*I[0] + 2*l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]*l[2]*m[2]*np.cos(z[1] - z[2])/2)**2/(I[1] - l[0]**2*l[1]**2*(m[1]/2 - m[2])**2*np.cos(z[0] - z[1])**2/(I[0] + l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]**2*m[1]/4 + l[1]**2*m[2])))*np.cos(z[0] - z[1])/(I[1] - l[0]**2*l[1]**2*(m[1]/2 - m[2])**2*np.cos(z[0] - z[1])**2/(I[0] + l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]**2*m[1]/4 + l[1]**2*m[2]) - l[0]*l[2]*m[2]*(l[0]*l[1]*(m[1]/2 - m[2])*(-l[0]**2*l[1]*l[2]*m[2]*(m[1]/2 - m[2])*np.cos(z[0] - z[1])*np.cos(z[0] - z[2])/(2*I[0] + 2*l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]*l[2]*m[2]*np.cos(z[1] - z[2])/2)*np.cos(z[0] - z[1])/((I[0] + l[0]**2*(m[0]/4 + m[1] + m[2]))*(I[1] - l[0]**2*l[1]**2*(m[1]/2 - m[2])**2*np.cos(z[0] - z[1])**2/(I[0] + l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]**2*m[1]/4 + l[1]**2*m[2])) - l[0]*l[2]*m[2]*np.cos(z[0] - z[2])/(2*I[0] + 2*l[0]**2*(m[0]/4 + m[1] + m[2])))*np.cos(z[0] - z[2])/(2*I[2] - 2*l[0]**2*l[2]**2*m[2]**2*np.cos(z[0] - z[2])**2/(4*I[0] + 4*l[0]**2*(m[0]/4 + m[1] + m[2])) + l[2]**2*m[2]/2 - 2*(-l[0]**2*l[1]*l[2]*m[2]*(m[1]/2 - m[2])*np.cos(z[0] - z[1])*np.cos(z[0] - z[2])/(2*I[0] + 2*l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]*l[2]*m[2]*np.cos(z[1] - z[2])/2)**2/(I[1] - l[0]**2*l[1]**2*(m[1]/2 - m[2])**2*np.cos(z[0] - z[1])**2/(I[0] + l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]**2*m[1]/4 + l[1]**2*m[2])) + 1)*(-g*l[0]*m[0]*np.cos(z[0])/2 - g*l[0]*m[1]*np.cos(z[0]) - g*l[0]*m[2]*np.cos(z[0]) - l[0]*l[1]*m[1]*z[4]**2*np.sin(z[0] - z[1])/2 - l[0]*l[1]*m[2]*z[4]**2*np.sin(z[0] - z[1]) - l[0]*l[2]*m[2]*z[5]**2*np.sin(z[0] - z[2])/2 + u[0])/(I[0] + l[0]**2*(m[0]/4 + m[1] + m[2]))
        ,
        ((-l[0]**2*l[1]*l[2]*m[2]*(m[1]/2 - m[2])*np.cos(z[0] - z[1])*np.cos(z[0] - z[2])/(2*I[0] + 2*l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]*l[2]*m[2]*np.cos(z[1] - z[2])/2)**2/((I[1] - l[0]**2*l[1]**2*(m[1]/2 - m[2])**2*np.cos(z[0] - z[1])**2/(I[0] + l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]**2*m[1]/4 + l[1]**2*m[2])*(I[2] - l[0]**2*l[2]**2*m[2]**2*np.cos(z[0] - z[2])**2/(4*I[0] + 4*l[0]**2*(m[0]/4 + m[1] + m[2])) + l[2]**2*m[2]/4 - (-l[0]**2*l[1]*l[2]*m[2]*(m[1]/2 - m[2])*np.cos(z[0] - z[1])*np.cos(z[0] - z[2])/(2*I[0] + 2*l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]*l[2]*m[2]*np.cos(z[1] - z[2])/2)**2/(I[1] - l[0]**2*l[1]**2*(m[1]/2 - m[2])**2*np.cos(z[0] - z[1])**2/(I[0] + l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]**2*m[1]/4 + l[1]**2*m[2]))) + 1)*(-g*l[1]*m[1]*np.cos(z[1])/2 - g*l[1]*m[2]*np.cos(z[1]) + l[0]*l[1]*m[1]*z[3]**2*np.sin(z[0] - z[1])/2 + l[0]*l[1]*m[2]*z[3]**2*np.sin(z[0] - z[1]) - l[1]*l[2]*m[2]*z[5]**2*np.sin(z[1] - z[2])/2 + u[1])/(I[1] - l[0]**2*l[1]**2*(m[1]/2 - m[2])**2*np.cos(z[0] - z[1])**2/(I[0] + l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]**2*m[1]/4 + l[1]**2*m[2]) + (-l[0]*l[1]*(m[1]/2 - m[2])*np.cos(z[0] - z[1])/(I[0] + l[0]**2*(m[0]/4 + m[1] + m[2])) - (l[0]*l[1]*(m[1]/2 - m[2])*(-l[0]**2*l[1]*l[2]*m[2]*(m[1]/2 - m[2])*np.cos(z[0] - z[1])*np.cos(z[0] - z[2])/(2*I[0] + 2*l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]*l[2]*m[2]*np.cos(z[1] - z[2])/2)*np.cos(z[0] - z[1])/((I[0] + l[0]**2*(m[0]/4 + m[1] + m[2]))*(I[1] - l[0]**2*l[1]**2*(m[1]/2 - m[2])**2*np.cos(z[0] - z[1])**2/(I[0] + l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]**2*m[1]/4 + l[1]**2*m[2])) - l[0]*l[2]*m[2]*np.cos(z[0] - z[2])/(2*I[0] + 2*l[0]**2*(m[0]/4 + m[1] + m[2])))*(-l[0]**2*l[1]*l[2]*m[2]*(m[1]/2 - m[2])*np.cos(z[0] - z[1])*np.cos(z[0] - z[2])/(2*I[0] + 2*l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]*l[2]*m[2]*np.cos(z[1] - z[2])/2)/(I[2] - l[0]**2*l[2]**2*m[2]**2*np.cos(z[0] - z[2])**2/(4*I[0] + 4*l[0]**2*(m[0]/4 + m[1] + m[2])) + l[2]**2*m[2]/4 - (-l[0]**2*l[1]*l[2]*m[2]*(m[1]/2 - m[2])*np.cos(z[0] - z[1])*np.cos(z[0] - z[2])/(2*I[0] + 2*l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]*l[2]*m[2]*np.cos(z[1] - z[2])/2)**2/(I[1] - l[0]**2*l[1]**2*(m[1]/2 - m[2])**2*np.cos(z[0] - z[1])**2/(I[0] + l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]**2*m[1]/4 + l[1]**2*m[2])))*(-g*l[0]*m[0]*np.cos(z[0])/2 - g*l[0]*m[1]*np.cos(z[0]) - g*l[0]*m[2]*np.cos(z[0]) - l[0]*l[1]*m[1]*z[4]**2*np.sin(z[0] - z[1])/2 - l[0]*l[1]*m[2]*z[4]**2*np.sin(z[0] - z[1]) - l[0]*l[2]*m[2]*z[5]**2*np.sin(z[0] - z[2])/2 + u[0])/(I[1] - l[0]**2*l[1]**2*(m[1]/2 - m[2])**2*np.cos(z[0] - z[1])**2/(I[0] + l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]**2*m[1]/4 + l[1]**2*m[2]) + (l[0]**2*l[1]*l[2]*m[2]*(m[1]/2 - m[2])*np.cos(z[0] - z[1])*np.cos(z[0] - z[2])/(2*I[0] + 2*l[0]**2*(m[0]/4 + m[1] + m[2])) - l[1]*l[2]*m[2]*np.cos(z[1] - z[2])/2)*(-g*l[2]*m[2]*np.cos(z[2])/2 + l[0]*l[2]*m[2]*z[3]**2*np.sin(z[0] - z[2])/2 + l[1]*l[2]*m[2]*z[4]**2*np.sin(z[1] - z[2])/2 + u[2])/((I[1] - l[0]**2*l[1]**2*(m[1]/2 - m[2])**2*np.cos(z[0] - z[1])**2/(I[0] + l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]**2*m[1]/4 + l[1]**2*m[2])*(I[2] - l[0]**2*l[2]**2*m[2]**2*np.cos(z[0] - z[2])**2/(4*I[0] + 4*l[0]**2*(m[0]/4 + m[1] + m[2])) + l[2]**2*m[2]/4 - (-l[0]**2*l[1]*l[2]*m[2]*(m[1]/2 - m[2])*np.cos(z[0] - z[1])*np.cos(z[0] - z[2])/(2*I[0] + 2*l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]*l[2]*m[2]*np.cos(z[1] - z[2])/2)**2/(I[1] - l[0]**2*l[1]**2*(m[1]/2 - m[2])**2*np.cos(z[0] - z[1])**2/(I[0] + l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]**2*m[1]/4 + l[1]**2*m[2])))
        ,
        (l[0]*l[1]*(m[1]/2 - m[2])*(-l[0]**2*l[1]*l[2]*m[2]*(m[1]/2 - m[2])*np.cos(z[0] - z[1])*np.cos(z[0] - z[2])/(2*I[0] + 2*l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]*l[2]*m[2]*np.cos(z[1] - z[2])/2)*np.cos(z[0] - z[1])/((I[0] + l[0]**2*(m[0]/4 + m[1] + m[2]))*(I[1] - l[0]**2*l[1]**2*(m[1]/2 - m[2])**2*np.cos(z[0] - z[1])**2/(I[0] + l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]**2*m[1]/4 + l[1]**2*m[2])) - l[0]*l[2]*m[2]*np.cos(z[0] - z[2])/(2*I[0] + 2*l[0]**2*(m[0]/4 + m[1] + m[2])))*(-g*l[0]*m[0]*np.cos(z[0])/2 - g*l[0]*m[1]*np.cos(z[0]) - g*l[0]*m[2]*np.cos(z[0]) - l[0]*l[1]*m[1]*z[4]**2*np.sin(z[0] - z[1])/2 - l[0]*l[1]*m[2]*z[4]**2*np.sin(z[0] - z[1]) - l[0]*l[2]*m[2]*z[5]**2*np.sin(z[0] - z[2])/2 + u[0])/(I[2] - l[0]**2*l[2]**2*m[2]**2*np.cos(z[0] - z[2])**2/(4*I[0] + 4*l[0]**2*(m[0]/4 + m[1] + m[2])) + l[2]**2*m[2]/4 - (-l[0]**2*l[1]*l[2]*m[2]*(m[1]/2 - m[2])*np.cos(z[0] - z[1])*np.cos(z[0] - z[2])/(2*I[0] + 2*l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]*l[2]*m[2]*np.cos(z[1] - z[2])/2)**2/(I[1] - l[0]**2*l[1]**2*(m[1]/2 - m[2])**2*np.cos(z[0] - z[1])**2/(I[0] + l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]**2*m[1]/4 + l[1]**2*m[2])) + (l[0]**2*l[1]*l[2]*m[2]*(m[1]/2 - m[2])*np.cos(z[0] - z[1])*np.cos(z[0] - z[2])/(2*I[0] + 2*l[0]**2*(m[0]/4 + m[1] + m[2])) - l[1]*l[2]*m[2]*np.cos(z[1] - z[2])/2)*(-g*l[1]*m[1]*np.cos(z[1])/2 - g*l[1]*m[2]*np.cos(z[1]) + l[0]*l[1]*m[1]*z[3]**2*np.sin(z[0] - z[1])/2 + l[0]*l[1]*m[2]*z[3]**2*np.sin(z[0] - z[1]) - l[1]*l[2]*m[2]*z[5]**2*np.sin(z[1] - z[2])/2 + u[1])/((I[1] - l[0]**2*l[1]**2*(m[1]/2 - m[2])**2*np.cos(z[0] - z[1])**2/(I[0] + l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]**2*m[1]/4 + l[1]**2*m[2])*(I[2] - l[0]**2*l[2]**2*m[2]**2*np.cos(z[0] - z[2])**2/(4*I[0] + 4*l[0]**2*(m[0]/4 + m[1] + m[2])) + l[2]**2*m[2]/4 - (-l[0]**2*l[1]*l[2]*m[2]*(m[1]/2 - m[2])*np.cos(z[0] - z[1])*np.cos(z[0] - z[2])/(2*I[0] + 2*l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]*l[2]*m[2]*np.cos(z[1] - z[2])/2)**2/(I[1] - l[0]**2*l[1]**2*(m[1]/2 - m[2])**2*np.cos(z[0] - z[1])**2/(I[0] + l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]**2*m[1]/4 + l[1]**2*m[2]))) + (-g*l[2]*m[2]*np.cos(z[2])/2 + l[0]*l[2]*m[2]*z[3]**2*np.sin(z[0] - z[2])/2 + l[1]*l[2]*m[2]*z[4]**2*np.sin(z[1] - z[2])/2 + u[2])/(I[2] - l[0]**2*l[2]**2*m[2]**2*np.cos(z[0] - z[2])**2/(4*I[0] + 4*l[0]**2*(m[0]/4 + m[1] + m[2])) + l[2]**2*m[2]/4 - (-l[0]**2*l[1]*l[2]*m[2]*(m[1]/2 - m[2])*np.cos(z[0] - z[1])*np.cos(z[0] - z[2])/(2*I[0] + 2*l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]*l[2]*m[2]*np.cos(z[1] - z[2])/2)**2/(I[1] - l[0]**2*l[1]**2*(m[1]/2 - m[2])**2*np.cos(z[0] - z[1])**2/(I[0] + l[0]**2*(m[0]/4 + m[1] + m[2])) + l[1]**2*m[1]/4 + l[1]**2*m[2]))
    ])